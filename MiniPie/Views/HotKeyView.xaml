<UserControl x:Class="MiniPie.Views.HotKeyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:validation="clr-namespace:MiniPie.Validation"
             xmlns:wpf="clr-namespace:Infralution.Localization.Wpf"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:interactivity="clr-namespace:MiniPie.Interactivity"
             xmlns:converter="clr-namespace:MiniPie.Converter"
             mc:Ignorable="d" 
             wpf:ResxExtension.DefaultResxName="MiniPie.Properties.Resources">
    <UserControl.Resources>
        <converter:KeyCodeToReadableStringConverter x:Key="CodeConverter" />
        <interactivity:BindingProxy x:Key="Proxy" Data="{Binding}"/>
    </UserControl.Resources>
    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" MinWidth="100"/>
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.Resources>
            <validation:HotkeyValidationRule x:Key="HotkeyValidationRule" ValidationStep="ConvertedProposedValue">
                <validation:HotkeyValidationRule.KeyManager>
                    <validation:KeyManagerWrapper KeyManager="{Binding Data.KeyManager, Source={StaticResource Proxy}}"/>
                </validation:HotkeyValidationRule.KeyManager>
            </validation:HotkeyValidationRule>
            
        </Grid.Resources>

        <Label Grid.Row="0" Grid.Column="0" Margin="0,0,0,5" Content="{wpf:Resx Settings_EnableHotkeys}" />
        <CheckBox Margin="5,0,0,5" Grid.Row="0" VerticalAlignment="Center"
                          Grid.Column="1"
                          IsChecked="{Binding HotKeysEnabled}" />

        <Label Grid.Row="1" Grid.Column="0" Margin="0,0,0,5" Content="{wpf:Resx App_PlayPause}" />
        <TextBox Margin="5,0,0,5" Name="PlayPause" Grid.Row="1"
                         VerticalAlignment="Center"
                         Grid.Column="1"
                         PreviewKeyDown="HotKey_OnPreviewKeyDown">
            <TextBox.Text>
                <Binding Path="PlayPause" Converter="{StaticResource CodeConverter}" Mode="TwoWay" ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True" UpdateSourceTrigger="Explicit">
                    <Binding.ValidationRules>
                        <StaticResource ResourceKey="HotkeyValidationRule"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Button Grid.Row="1" Grid.Column="2" 
                Margin="5,0,0,5" 
                Height="24" Width="24"
                VerticalAlignment="Center"
                BorderThickness="1"
                ToolTip="{wpf:Resx Settings_Clear}"
                Style="{DynamicResource MetroCircleButtonStyle}">
            <Button.Content>
                <Image Source="../Images/Clear.png" Width="12" Height="12"/>
            </Button.Content>
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <cal:ActionMessage MethodName="Clear">
                        <cal:Parameter Value="{Binding ElementName=PlayPause}"></cal:Parameter>
                    </cal:ActionMessage>
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
        </Button>

        <Label Grid.Row="2" Grid.Column="0" Margin="0,0,0,5"  Content="{wpf:Resx App_Previous}" />
        <TextBox Margin="5,0,0,5" Name="Previous" Grid.Row="2"
                         VerticalAlignment="Center"
                         Grid.Column="1"
                         PreviewKeyDown="HotKey_OnPreviewKeyDown">
            <TextBox.Text>
                <Binding Path="Previous" Converter="{StaticResource CodeConverter}" Mode="TwoWay" ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True" UpdateSourceTrigger="Explicit">
                    <Binding.ValidationRules>
                        <StaticResource ResourceKey="HotkeyValidationRule"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Button Grid.Row="2" Grid.Column="2" 
                Margin="5,0,0,5" 
                Height="24" Width="24" 
                VerticalAlignment="Center"
                BorderThickness="1"
                ToolTip="{wpf:Resx Settings_Clear}"
                Style="{DynamicResource MetroCircleButtonStyle}">
            <Button.Content>
                <Image Source="../Images/Clear.png" Width="12" Height="12"/>
            </Button.Content>
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <cal:ActionMessage MethodName="Clear">
                        <cal:Parameter Value="{Binding ElementName=Previous}"></cal:Parameter>
                    </cal:ActionMessage>
                </i:EventTrigger>
            </>-->
        </Button>

        <Label Grid.Row="3" Grid.Column="0" Content="{wpf:Resx App_Next}" Margin="0,0,0,5" />
        <TextBox Margin="5,0,0,5" Name="Next" Grid.Row="3"
                         VerticalAlignment="Center"
                         Grid.Column="1"
                         PreviewKeyDown="HotKey_OnPreviewKeyDown">
            <TextBox.Text>
                <Binding Path="Next" Converter="{StaticResource CodeConverter}" Mode="TwoWay" ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True" UpdateSourceTrigger="Explicit">
                    <Binding.ValidationRules>
                        <StaticResource ResourceKey="HotkeyValidationRule"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Button Grid.Row="3" Grid.Column="2" 
                Margin="5,0,0,5" 
                Height="24" Width="24" 
                VerticalAlignment="Center"
                BorderThickness="1"
                ToolTip="{wpf:Resx Settings_Clear}"
                Style="{DynamicResource MetroCircleButtonStyle}">
            <Button.Content>
                <Image Source="../Images/Clear.png" Width="12" Height="12"/>
            </Button.Content>
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <cal:ActionMessage MethodName="Clear">
                        <cal:Parameter Value="{Binding ElementName=Next}"></cal:Parameter>
                    </cal:ActionMessage>
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
        </Button>

        <Label Grid.Row="4" Grid.Column="0" Content="{wpf:Resx App_VolumeDown}" Margin="0,0,0,5"  />
        <TextBox Margin="5,0,0,5" Name="VolumeDown" Grid.Row="4"
                         VerticalAlignment="Center"
                         Grid.Column="1"
                         PreviewKeyDown="HotKey_OnPreviewKeyDown">
            <TextBox.Text>
                <Binding Path="VolumeDown" Converter="{StaticResource CodeConverter}" Mode="TwoWay"
                                 ValidatesOnDataErrors="True" NotifyOnValidationError="True" UpdateSourceTrigger="Explicit">
                    <Binding.ValidationRules>
                        <StaticResource ResourceKey="HotkeyValidationRule"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Button Grid.Row="4" Grid.Column="2" 
                Margin="5,0,0,5" 
                Height="24" Width="24" 
                VerticalAlignment="Center"
                BorderThickness="1"
                ToolTip="{wpf:Resx Settings_Clear}"
                Style="{DynamicResource MetroCircleButtonStyle}">
            <Button.Content>
                <Image Source="../Images/Clear.png" Width="12" Height="12"/>
            </Button.Content>
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <cal:ActionMessage MethodName="Clear">
                        <cal:Parameter Value="{Binding ElementName=VolumeDown}"></cal:Parameter>
                    </cal:ActionMessage>
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
        </Button>

        <Label Grid.Row="5" Grid.Column="0" Content="{wpf:Resx App_VolumeUp}" Margin="0,0,0,5" />
        <TextBox Margin="5,0,0,5" Name="VolumeUp" Grid.Row="5"
                         VerticalAlignment="Center"
                         Grid.Column="1"
                         PreviewKeyDown="HotKey_OnPreviewKeyDown">
            <TextBox.Text>
                <Binding Path="VolumeUp" Converter="{StaticResource CodeConverter}" Mode="TwoWay" ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True" UpdateSourceTrigger="Explicit">
                    <Binding.ValidationRules>
                        <StaticResource ResourceKey="HotkeyValidationRule"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Button Grid.Row="5" Grid.Column="2" 
                Margin="5,0,0,5" 
                Height="24" Width="24"
                VerticalAlignment="Center"
                ToolTip="{wpf:Resx Settings_Clear}"
                BorderThickness="1" Style="{DynamicResource MetroCircleButtonStyle}">
            <Button.Content>
                <Image Source="../Images/Clear.png" Width="12" Height="12"/>
            </Button.Content>
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <cal:ActionMessage MethodName="Clear">
                        <cal:Parameter Value="{Binding ElementName=VolumeUp}"></cal:Parameter>
                    </cal:ActionMessage>
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
        </Button>
    </Grid>
</UserControl>
