<ContextMenu x:Class="MiniPie.Controls.MiniPieContextMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:wpf="clr-namespace:Infralution.Localization.Wpf"
             xmlns:converter="clr-namespace:MiniPie.Converter"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             wpf:ResxExtension.DefaultResxName="MiniPie.Properties.Resources"
             mc:Ignorable="d"
             Name="MiniPieMenu"
             BorderBrush="Transparent"
             Style="{StaticResource MetroContextMenu}">
    <ContextMenu.Resources>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}"
                     TargetType="{x:Type ContentControl}">
            <Border BorderBrush="{DynamicResource SubMenuBorderBrush}"
                BorderThickness="0"
                Background="{DynamicResource SubMenuBackgroundBrush}">
                <ContentPresenter />
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}"
                     TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="Bg"
                       Fill="{TemplateBinding Background}"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="1" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24"
                                      SharedSizeGroup="MenuItemIconColumnGroup"
                                      Width="Auto" />
                        <ColumnDefinition Width="4" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="6" />
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup"
                                      Width="Auto" />
                        <ColumnDefinition Width="17" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                                  ContentSource="Icon"
                                  Margin="1"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="Center" />
                    <Path x:Name="GlyphPanel"
                      Data="{StaticResource Checkmark}"
                      Fill="{DynamicResource CheckmarkFill}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed"
                      Margin="5,0,0,0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center" />
                    <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           Text="{TemplateBinding InputGestureText}"
                           Visibility="Collapsed" />
                    <Path Grid.Column="5"
                      Data="{StaticResource RightArrow}"
                      Fill="{DynamicResource RightArrowFill}"
                      Margin="4,0,0,0"
                      VerticalAlignment="Center" />
                </Grid>
                <Popup x:Name="PART_Popup"
                   AllowsTransparency="True"
                   Focusable="False"
                   HorizontalOffset="0"
                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   Placement="Right"
                   VerticalOffset="-3">
                    <Grid>
                        <Rectangle x:Name="LayoutRoot"
                               Fill="{TemplateBinding Background}" />
                        <ContentControl x:Name="SubMenuBorder"
                                    IsTabStop="False"
                                    Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ScrollViewer x:Name="SubMenuScrollViewer"
                                      CanContentScroll="True"
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            Grid.IsSharedSizeScope="True"
                                            Margin="0"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            KeyboardNavigation.TabNavigation="Cycle" />
                            </ScrollViewer>
                        </ContentControl>
                    </Grid>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="True">
                    <Setter Property="PopupAnimation"
                        TargetName="PART_Popup"
                        Value="None" />
                </Trigger>
                <Trigger Property="Icon"
                     Value="{x:Null}">
                    <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsChecked"
                     Value="True">
                    <Setter Property="Visibility"
                        TargetName="GlyphPanel"
                        Value="Visible" />
                    <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted"
                     Value="True">
                    <Setter Property="Fill"
                        TargetName="Bg"
                        Value="{DynamicResource MenuItemSelectionFill}" />
                    <Setter Property="Stroke"
                        TargetName="Bg"
                        Value="{DynamicResource MenuItemSelectionStroke}" />
                </Trigger>
                <Trigger Property="IsEnabled"
                     Value="False">
                    <Setter Property="Foreground"
                        Value="{DynamicResource DisabledMenuItemForeground}" />
                    <Setter Property="Fill"
                        TargetName="GlyphPanel"
                        Value="{DynamicResource DisabledMenuItemGlyphPanel}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <converter:PlaylistMenuItemsConverter x:Key="PlaylistMenuItemsConverter"/>
    </ContextMenu.Resources>
    <MenuItem Name="Artist" Header="{Binding CurrentArtist}" IsEnabled="False"/>
    <MenuItem Name="Song" Header="{Binding CurrentTrack}" IsEnabled="False" />
    <MenuItem Header="{wpf:Resx App_CopyTrack}">
        <MenuItem Header="{wpf:Resx App_CopyTrackName}" cal:Message.Attach="[Event Click] = [Action CopyTrackName]" />
        <MenuItem Header="{wpf:Resx App_CopySpotifyLink}" cal:Message.Attach="[Event Click] = [Action CopySpotifyLink]" />
    </MenuItem>
    <MenuItem Name="AddToPlaylist" Header="{wpf:Resx App_AddToPlaylist}" >
        <MenuItem.Resources>
            <Style TargetType="MenuItem" BasedOn="{StaticResource MetroMenuItem}">
                <Setter Property="Command" Value="{Binding Command}" />
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
            </Style>
        </MenuItem.Resources>
        <MenuItem.ItemsSource>
            <MultiBinding Converter="{StaticResource PlaylistMenuItemsConverter}">
                <Binding Path="Playlists"/>
                <Binding Path="DataContext" ElementName="MiniPieMenu"/>
            </MultiBinding>
        </MenuItem.ItemsSource>
    </MenuItem>
    <Separator />
        <MenuItem Header="{wpf:Resx App_PlayPause}"
                  cal:Message.Attach="[Event Click] = [Action PlayPause]" />
        <MenuItem Header="{wpf:Resx App_Previous}"
                  cal:Message.Attach="[Event Click] = [Action PlayPrevious]" />
        <MenuItem Header="{wpf:Resx App_Next}"
                  cal:Message.Attach="[Event Click] = [Action PlayNext]" />
        <Separator />
        <MenuItem Header="{wpf:Resx App_VolumeUp}"
                  cal:Message.Attach="[Event Click] = [Action VolumeUp]" />
        <MenuItem Header="{wpf:Resx App_VolumeDown}"
                  cal:Message.Attach="[Event Click] = [Action VolumeDown]" />
        <Separator />
        <MenuItem Header="{wpf:Resx App_Settings}"
                      cal:Message.Attach="[Event Click] = [Action ShowSettings]" />

        <Separator />
        <MenuItem Header="{wpf:Resx App_MinimizeToTray}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                <cal:ActionMessage MethodName="HideElement">
                    <cal:Parameter Value="{Binding MainWindow}"/>
                </cal:ActionMessage>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </MenuItem>
    <MenuItem Header="{wpf:Resx App_ExportLogFile}" cal:Message.Attach="[Event Click] = [Action ExportLogFile]"/>
    <MenuItem Header="{wpf:Resx App_AboutMiniPie}"
                  cal:Message.Attach="[Event Click] = [Action ShowAbout]" />
   <MenuItem Header="{wpf:Resx App_Exit}">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
                <cal:ActionMessage MethodName="Close">
                    <cal:Parameter Value="{Binding MainWindow}"/>
                </cal:ActionMessage>
            </i:EventTrigger>
        </i:Interaction.Triggers>
    </MenuItem>
</ContextMenu>
